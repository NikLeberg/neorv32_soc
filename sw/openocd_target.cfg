source [find /opt/aji_openocd/tcl/interface/altera-usb-blaster.cfg]

# Intel (Altera) Cyclone IV E FPGA
if { [info exists CHIPNAME] } {
    set _CHIPNAME $CHIPNAME
} else {
    set _CHIPNAME cycloneive
}

# Subsidiary TAP: fpga (tap)
# EP4CE15F23C8 has id 0x020f20dd
jtag newtap $_CHIPNAME tap -irlen 10 -expected-id 0x020f20dd


# NEORV32 https://github.com/stnolting/neorv32
set _TARGETNAME_0 $_CHIPNAME.neorv32_cpu0
set _TARGETNAME_1 $_CHIPNAME.neorv32_cpu1
set _TARGETNAME_2 $_CHIPNAME.neorv32_cpu2
set _TARGETNAME_3 $_CHIPNAME.neorv32_cpu3

# NEORV32 target
target create $_TARGETNAME_0 riscv -chain-position $_CHIPNAME.tap -rtos hwthread
target create $_TARGETNAME_1 riscv -chain-position $_CHIPNAME.tap -coreid 1
target create $_TARGETNAME_2 riscv -chain-position $_CHIPNAME.tap -coreid 2
target create $_TARGETNAME_3 riscv -chain-position $_CHIPNAME.tap -coreid 3
target smp $_TARGETNAME_0 $_TARGETNAME_1 $_TARGETNAME_2 $_TARGETNAME_3

# We use the intel jtag atom that only exposes USR0 & USR1, remap registers.
# riscv set_ir idcode 0x09 inacessible, handled by fpga tap
riscv set_ir dtmcs 0x00c
riscv set_ir dmi 0x00e

# Expose NEORV32-specific CSRs
riscv expose_csrs 4032

# Shutdown OpenOCD when GDB connection terminates
$_TARGETNAME_0 configure -event gdb-detach {shutdown}
$_TARGETNAME_1 configure -event gdb-detach {shutdown}
$_TARGETNAME_2 configure -event gdb-detach {shutdown}
$_TARGETNAME_3 configure -event gdb-detach {shutdown}

init
halt
