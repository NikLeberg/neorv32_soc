include ../scripts/makefile.def
include ../scripts/makefile.fn

# Run makefile from within the nikleberg/quartus docker container for faster
# compilation.
$(info Running Quartus Makefile.)

# Load the generated design unit dependencies.
-include deps.d

.PHONY: quartus
quartus:
	@

obj/%.vhd.o: ../%.vhd | quartus_project.tcl
	@sed -i 's@#<<du_files>>@set_global_assignment -name VHDL_FILE $(word 1,$^) -library $(call get_lib_of_file,$(word 1,$^))\n#<<du_files>>@g' quartus_project.tcl
	@mkdir -p $(@D)
	@touch $@

obj/%.vhdl.o: ../%.vhdl | quartus_project.tcl
	@sed -i 's@#<<du_files>>@set_global_assignment -name VHDL_FILE $(word 1,$^) -library $(call get_lib_of_file,$(word 1,$^))\n#<<du_files>>@g' quartus_project.tcl
	@mkdir -p $(@D)
	@touch $@

obj/%.psl.o:
	@mkdir -p $(@D)
	@touch $@

%:
	@echo [TOP] $@
	$(eval TOP := $(call word_dot,$@,2))

.PHONY: synth
synth: output_files/top.sof

output_files/top.sof: top.qpf
	@quartus_sh -t $(PROJ_ROOT)/scripts/quartus/quartus_compile.tcl
MAKE_CLEAN += flowsummary.log

top.qpf: quartus_project.tcl $(OBJS)
	@quartus_sh -t quartus_project.tcl
MAKE_CLEAN += top.qpf top.qsf

quartus_project.tcl:
	@cp $(PROJ_ROOT)/scripts/quartus/quartus_project.tcl.template quartus_project.tcl
	@sed -i 's/<<top_level_entity>>/$(TOP)/g' quartus_project.tcl
MAKE_CLEAN += quartus_project.tcl

.PHONY: program
program: output_files/top.sof
	@quartus_pgm -c USB-Blaster --mode jtag --operation='p;output_files/top.sof'

.PHONY: flash
flash: output_files/top.sof
	@quartus_cpf -c $(PROJ_ROOT)/scripts/quartus/quartus_flash.cof
	@quartus_pgm $(PROJ_ROOT)/scripts/quartus/quartus_flash.cdf

.PHONY: open
open: top.qpf $(OBJS)
	@quartus top.qpf
MAKE_CLEAN += top.*.rpt top.*.summary

.PHONY: clean
clean:
	@rm -rf $(MAKE_CLEAN)
	@rm -rf db/
	@rm -rf incremental_db/
	@rm -rf output_files/
