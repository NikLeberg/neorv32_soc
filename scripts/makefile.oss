include ../scripts/makefile.def
include ../scripts/makefile.fn

# Run makefile from within the hdl-containers/formal docker container for faster
# compilation.
$(info Running OSS Makefile.)

# Load the generated design unit dependencies.
-include deps.d

.PHONY: oss
oss: $(OBJS) $(OBJS_TB)

# Compile the design units with GHDL and enabled 2008 VHDL language features.
GHDL  ?= ghdl
FLAGS += --std=08 # enable VHDL-2008 language features
FLAGS += -g -v # add debug information
SIM_FLAGS += --ieee-asserts=disable # ignore "metavalue detected"
SIM_FLAGS += --wave=wave.ghw # save waveform

obj/%.vhd.o: ../%.vhd
	@echo [CC] $<
	@$(GHDL) -a $(FLAGS) --work=$(call get_lib_of_file,$<) $<
	@mkdir -p $(@D)
	@touch $@

obj/%.vhdl.o: ../%.vhdl
	@echo [CC] $<
	@$(GHDL) -a $(FLAGS) --work=$(call get_lib_of_file,$<) $<
	@mkdir -p $(@D)
	@touch $@

obj/%.psl.o: ../%.psl
	@echo [CC] $<
	@$(GHDL) -a $(FLAGS) --work=$(call get_lib_of_file,$<) $<
	@mkdir -p $(@D)
	@touch $@

%: du/%
	@echo [LD] $@
	@$(GHDL) -e $(FLAGS) $@

.PHONY: sim
sim:
	@$(GHDL) -r $(FLAGS) $(filter-out oss sim,$(MAKECMDGOALS)) $(SIM_FLAGS)

.PHONY: test
test: $(TESTBENCHES)
	@set -e; for tb in $(TESTBENCHES); do \
		echo Running testbench $${tb}...; \
		$(GHDL) -r $(FLAGS) $${tb} $(SIM_FLAGS); \
	done

.PHONY: clean
clean:
	@rm -rf $(MAKE_CLEAN)
	@rm -f *.cf
	@rm -f *.vcd
	@rm -f *.ghw
